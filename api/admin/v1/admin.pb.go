// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: v1/admin.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListServiceStatusesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListServiceStatusesRequest) Reset() {
	*x = ListServiceStatusesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceStatusesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceStatusesRequest) ProtoMessage() {}

func (x *ListServiceStatusesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceStatusesRequest.ProtoReflect.Descriptor instead.
func (*ListServiceStatusesRequest) Descriptor() ([]byte, []int) {
	return file_v1_admin_proto_rawDescGZIP(), []int{0}
}

type ListServiceStatusesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SanboxSystemInfo []*ListServiceStatusesResponse_SanboxSystemInfo `protobuf:"bytes,1,rep,name=sanbox_system_info,json=sanboxSystemInfo,proto3" json:"sanbox_system_info,omitempty"`
}

func (x *ListServiceStatusesResponse) Reset() {
	*x = ListServiceStatusesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceStatusesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceStatusesResponse) ProtoMessage() {}

func (x *ListServiceStatusesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceStatusesResponse.ProtoReflect.Descriptor instead.
func (*ListServiceStatusesResponse) Descriptor() ([]byte, []int) {
	return file_v1_admin_proto_rawDescGZIP(), []int{1}
}

func (x *ListServiceStatusesResponse) GetSanboxSystemInfo() []*ListServiceStatusesResponse_SanboxSystemInfo {
	if x != nil {
		return x.SanboxSystemInfo
	}
	return nil
}

type ListServiceStatusesResponse_SanboxSystemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     *ListServiceStatusesResponse_SanboxSystemInfo_Host   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Cpu      *ListServiceStatusesResponse_SanboxSystemInfo_Cpu    `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory   *ListServiceStatusesResponse_SanboxSystemInfo_Memory `protobuf:"bytes,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk     *ListServiceStatusesResponse_SanboxSystemInfo_Disk   `protobuf:"bytes,4,opt,name=disk,proto3" json:"disk,omitempty"`
	Endpoint string                                               `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo) Reset() {
	*x = ListServiceStatusesResponse_SanboxSystemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceStatusesResponse_SanboxSystemInfo) ProtoMessage() {}

func (x *ListServiceStatusesResponse_SanboxSystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceStatusesResponse_SanboxSystemInfo.ProtoReflect.Descriptor instead.
func (*ListServiceStatusesResponse_SanboxSystemInfo) Descriptor() ([]byte, []int) {
	return file_v1_admin_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo) GetHost() *ListServiceStatusesResponse_SanboxSystemInfo_Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo) GetCpu() *ListServiceStatusesResponse_SanboxSystemInfo_Cpu {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo) GetMemory() *ListServiceStatusesResponse_SanboxSystemInfo_Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo) GetDisk() *ListServiceStatusesResponse_SanboxSystemInfo_Disk {
	if x != nil {
		return x.Disk
	}
	return nil
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type ListServiceStatusesResponse_SanboxSystemInfo_Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoStat *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat `protobuf:"bytes,1,opt,name=info_stat,json=infoStat,proto3" json:"info_stat,omitempty"`
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host) Reset() {
	*x = ListServiceStatusesResponse_SanboxSystemInfo_Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceStatusesResponse_SanboxSystemInfo_Host) ProtoMessage() {}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceStatusesResponse_SanboxSystemInfo_Host.ProtoReflect.Descriptor instead.
func (*ListServiceStatusesResponse_SanboxSystemInfo_Host) Descriptor() ([]byte, []int) {
	return file_v1_admin_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host) GetInfoStat() *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat {
	if x != nil {
		return x.InfoStat
	}
	return nil
}

type ListServiceStatusesResponse_SanboxSystemInfo_Cpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Counts returns the number of physical or logical cores in the system
	Counts   int32                                                        `protobuf:"varint,1,opt,name=counts,proto3" json:"counts,omitempty"`
	Percent  float32                                                      `protobuf:"fixed32,2,opt,name=percent,proto3" json:"percent,omitempty"`
	InfoStat []*ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat `protobuf:"bytes,3,rep,name=info_stat,json=infoStat,proto3" json:"info_stat,omitempty"`
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu) Reset() {
	*x = ListServiceStatusesResponse_SanboxSystemInfo_Cpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceStatusesResponse_SanboxSystemInfo_Cpu) ProtoMessage() {}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceStatusesResponse_SanboxSystemInfo_Cpu.ProtoReflect.Descriptor instead.
func (*ListServiceStatusesResponse_SanboxSystemInfo_Cpu) Descriptor() ([]byte, []int) {
	return file_v1_admin_proto_rawDescGZIP(), []int{1, 0, 1}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu) GetCounts() int32 {
	if x != nil {
		return x.Counts
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu) GetInfoStat() []*ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat {
	if x != nil {
		return x.InfoStat
	}
	return nil
}

type ListServiceStatusesResponse_SanboxSystemInfo_Memory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwapDevice    []*ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice      `protobuf:"bytes,1,rep,name=swap_device,json=swapDevice,proto3" json:"swap_device,omitempty"`
	VirtualMemory *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat `protobuf:"bytes,2,opt,name=virtual_memory,json=virtualMemory,proto3" json:"virtual_memory,omitempty"`
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory) Reset() {
	*x = ListServiceStatusesResponse_SanboxSystemInfo_Memory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceStatusesResponse_SanboxSystemInfo_Memory) ProtoMessage() {}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceStatusesResponse_SanboxSystemInfo_Memory.ProtoReflect.Descriptor instead.
func (*ListServiceStatusesResponse_SanboxSystemInfo_Memory) Descriptor() ([]byte, []int) {
	return file_v1_admin_proto_rawDescGZIP(), []int{1, 0, 2}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory) GetSwapDevice() []*ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice {
	if x != nil {
		return x.SwapDevice
	}
	return nil
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory) GetVirtualMemory() *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat {
	if x != nil {
		return x.VirtualMemory
	}
	return nil
}

type ListServiceStatusesResponse_SanboxSystemInfo_Disk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsageStat *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat `protobuf:"bytes,1,opt,name=usage_stat,json=usageStat,proto3" json:"usage_stat,omitempty"`
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk) Reset() {
	*x = ListServiceStatusesResponse_SanboxSystemInfo_Disk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceStatusesResponse_SanboxSystemInfo_Disk) ProtoMessage() {}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceStatusesResponse_SanboxSystemInfo_Disk.ProtoReflect.Descriptor instead.
func (*ListServiceStatusesResponse_SanboxSystemInfo_Disk) Descriptor() ([]byte, []int) {
	return file_v1_admin_proto_rawDescGZIP(), []int{1, 0, 3}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk) GetUsageStat() *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat {
	if x != nil {
		return x.UsageStat
	}
	return nil
}

type ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname             string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Uptime               uint64 `protobuf:"varint,2,opt,name=uptime,proto3" json:"uptime,omitempty"`
	BootTime             uint64 `protobuf:"varint,3,opt,name=bootTime,proto3" json:"bootTime,omitempty"`
	Procs                uint64 `protobuf:"varint,4,opt,name=procs,proto3" json:"procs,omitempty"`
	Os                   string `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	Platform             string `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformFamily       string `protobuf:"bytes,7,opt,name=platformFamily,proto3" json:"platformFamily,omitempty"`
	PlatformVersion      string `protobuf:"bytes,8,opt,name=platformVersion,proto3" json:"platformVersion,omitempty"`
	KernelVersion        string `protobuf:"bytes,9,opt,name=kernelVersion,proto3" json:"kernelVersion,omitempty"`
	KernelArch           string `protobuf:"bytes,10,opt,name=kernelArch,proto3" json:"kernelArch,omitempty"`
	VirtualizationSystem string `protobuf:"bytes,11,opt,name=virtualizationSystem,proto3" json:"virtualizationSystem,omitempty"`
	VirtualizationRole   string `protobuf:"bytes,12,opt,name=virtualizationRole,proto3" json:"virtualizationRole,omitempty"`
	HostId               string `protobuf:"bytes,13,opt,name=hostId,proto3" json:"hostId,omitempty"`
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) Reset() {
	*x = ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) ProtoMessage() {}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat.ProtoReflect.Descriptor instead.
func (*ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) Descriptor() ([]byte, []int) {
	return file_v1_admin_proto_rawDescGZIP(), []int{1, 0, 0, 0}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetBootTime() uint64 {
	if x != nil {
		return x.BootTime
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetProcs() uint64 {
	if x != nil {
		return x.Procs
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetKernelArch() string {
	if x != nil {
		return x.KernelArch
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetVirtualizationSystem() string {
	if x != nil {
		return x.VirtualizationSystem
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetVirtualizationRole() string {
	if x != nil {
		return x.VirtualizationRole
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

type ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu        int32    `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	VendorId   string   `protobuf:"bytes,2,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	Family     string   `protobuf:"bytes,3,opt,name=family,proto3" json:"family,omitempty"`
	Model      string   `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Stepping   int32    `protobuf:"varint,5,opt,name=stepping,proto3" json:"stepping,omitempty"`
	PhysicalId string   `protobuf:"bytes,6,opt,name=physical_id,json=physicalId,proto3" json:"physical_id,omitempty"`
	CoreId     string   `protobuf:"bytes,7,opt,name=core_id,json=coreId,proto3" json:"core_id,omitempty"`
	Cores      int32    `protobuf:"varint,8,opt,name=cores,proto3" json:"cores,omitempty"`
	ModelName  string   `protobuf:"bytes,9,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	Mhz        float64  `protobuf:"fixed64,10,opt,name=mhz,proto3" json:"mhz,omitempty"`
	CacheSize  int32    `protobuf:"varint,11,opt,name=cache_size,json=cacheSize,proto3" json:"cache_size,omitempty"`
	Flags      []string `protobuf:"bytes,12,rep,name=flags,proto3" json:"flags,omitempty"`
	Microcode  string   `protobuf:"bytes,13,opt,name=microcode,proto3" json:"microcode,omitempty"`
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) Reset() {
	*x = ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) ProtoMessage() {}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat.ProtoReflect.Descriptor instead.
func (*ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) Descriptor() ([]byte, []int) {
	return file_v1_admin_proto_rawDescGZIP(), []int{1, 0, 1, 0}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetStepping() int32 {
	if x != nil {
		return x.Stepping
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetPhysicalId() string {
	if x != nil {
		return x.PhysicalId
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetCoreId() string {
	if x != nil {
		return x.CoreId
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetMhz() float64 {
	if x != nil {
		return x.Mhz
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetCacheSize() int32 {
	if x != nil {
		return x.CacheSize
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat) GetMicrocode() string {
	if x != nil {
		return x.Microcode
	}
	return ""
}

type ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UsedBytes uint64 `protobuf:"varint,2,opt,name=used_bytes,json=usedBytes,proto3" json:"used_bytes,omitempty"`
	FreeBytes uint64 `protobuf:"varint,3,opt,name=free_bytes,json=freeBytes,proto3" json:"free_bytes,omitempty"`
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice) Reset() {
	*x = ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice) ProtoMessage() {}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice.ProtoReflect.Descriptor instead.
func (*ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice) Descriptor() ([]byte, []int) {
	return file_v1_admin_proto_rawDescGZIP(), []int{1, 0, 2, 0}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice) GetUsedBytes() uint64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice) GetFreeBytes() uint64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

type ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       uint64  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Available   uint64  `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	Used        uint64  `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	UsedPercent float64 `protobuf:"fixed64,4,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	Free        uint64  `protobuf:"varint,5,opt,name=free,proto3" json:"free,omitempty"`
	Active      uint64  `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	Inactive    uint64  `protobuf:"varint,7,opt,name=inactive,proto3" json:"inactive,omitempty"`
	SwapTotal   uint64  `protobuf:"varint,8,opt,name=swap_total,json=swapTotal,proto3" json:"swap_total,omitempty"`
	SwapFree    uint64  `protobuf:"varint,9,opt,name=swap_free,json=swapFree,proto3" json:"swap_free,omitempty"`
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) Reset() {
	*x = ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) ProtoMessage() {}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat.ProtoReflect.Descriptor instead.
func (*ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) Descriptor() ([]byte, []int) {
	return file_v1_admin_proto_rawDescGZIP(), []int{1, 0, 2, 1}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) GetAvailable() uint64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) GetActive() uint64 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) GetInactive() uint64 {
	if x != nil {
		return x.Inactive
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) GetSwapTotal() uint64 {
	if x != nil {
		return x.SwapTotal
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat) GetSwapFree() uint64 {
	if x != nil {
		return x.SwapFree
	}
	return 0
}

type ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path              string  `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Fst               string  `protobuf:"bytes,2,opt,name=fst,proto3" json:"fst,omitempty"`
	Total             uint64  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Free              uint64  `protobuf:"varint,4,opt,name=free,proto3" json:"free,omitempty"`
	Used              uint64  `protobuf:"varint,5,opt,name=used,proto3" json:"used,omitempty"`
	UsedPercent       float64 `protobuf:"fixed64,6,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	InodesTotal       uint64  `protobuf:"varint,7,opt,name=inodes_total,json=inodesTotal,proto3" json:"inodes_total,omitempty"`
	InodesUsed        uint64  `protobuf:"varint,8,opt,name=inodes_used,json=inodesUsed,proto3" json:"inodes_used,omitempty"`
	InodesFree        uint64  `protobuf:"varint,9,opt,name=inodes_free,json=inodesFree,proto3" json:"inodes_free,omitempty"`
	InodesUsedPercent float64 `protobuf:"fixed64,10,opt,name=inodes_used_percent,json=inodesUsedPercent,proto3" json:"inodes_used_percent,omitempty"`
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) Reset() {
	*x = ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) ProtoMessage() {}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat.ProtoReflect.Descriptor instead.
func (*ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) Descriptor() ([]byte, []int) {
	return file_v1_admin_proto_rawDescGZIP(), []int{1, 0, 3, 0}
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) GetFst() string {
	if x != nil {
		return x.Fst
	}
	return ""
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) GetInodesTotal() uint64 {
	if x != nil {
		return x.InodesTotal
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) GetInodesUsed() uint64 {
	if x != nil {
		return x.InodesUsed
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) GetInodesFree() uint64 {
	if x != nil {
		return x.InodesFree
	}
	return 0
}

func (x *ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat) GetInodesUsedPercent() float64 {
	if x != nil {
		return x.InodesUsedPercent
	}
	return 0
}

var File_v1_admin_proto protoreflect.FileDescriptor

var file_v1_admin_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xae, 0x14, 0x0a, 0x1b,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x12, 0x73,
	0x61, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x61, 0x6e, 0x62, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x73, 0x61, 0x6e, 0x62, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xa3, 0x13, 0x0a, 0x10, 0x53, 0x61, 0x6e, 0x62, 0x6f,
	0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x54, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x61, 0x6e, 0x62, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x51, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x61, 0x6e, 0x62, 0x6f,
	0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x70, 0x75, 0x52,
	0x03, 0x63, 0x70, 0x75, 0x12, 0x5a, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x61, 0x6e, 0x62, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x12, 0x54, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x61, 0x6e, 0x62, 0x6f,
	0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x6b,
	0x52, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x1a, 0xa1, 0x04, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x09, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49,
	0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x61, 0x6e, 0x62, 0x6f,
	0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x53,
	0x74, 0x61, 0x74, 0x1a, 0xb0, 0x03, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x70,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x12, 0x32, 0x0a, 0x14, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x2e,
	0x0a, 0x12, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x1a, 0xf8, 0x03, 0x0a, 0x03, 0x43, 0x70, 0x75, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x12, 0x65, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x61, 0x6e, 0x62, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x43, 0x70, 0x75, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x52, 0x08, 0x69,
	0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xd7, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x68, 0x7a, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x68, 0x7a, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x63, 0x6f, 0x64,
	0x65, 0x1a, 0xda, 0x04, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x6e, 0x0a, 0x0b,
	0x73, 0x77, 0x61, 0x70, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x4d, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x61,
	0x6e, 0x62, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x0a, 0x73, 0x77, 0x61, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x0e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x61, 0x6e, 0x62, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0d, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x1a, 0x5e, 0x0a, 0x0a, 0x53, 0x77, 0x61,
	0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72,
	0x65, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x66, 0x72, 0x65, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x1a, 0x82, 0x02, 0x0a, 0x11, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x77, 0x61, 0x70, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x46, 0x72, 0x65, 0x65, 0x1a, 0x9b,
	0x03, 0x0a, 0x04, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x69, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x6a, 0x6e,
	0x6f, 0x6a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x61, 0x6e, 0x62, 0x6f, 0x78, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x2e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x09, 0x75, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x1a, 0xa7, 0x02, 0x0a, 0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x66, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x64,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x46, 0x72, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x69, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x55, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x32, 0x98, 0x01, 0x0a,
	0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x87, 0x01,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_v1_admin_proto_rawDescOnce sync.Once
	file_v1_admin_proto_rawDescData = file_v1_admin_proto_rawDesc
)

func file_v1_admin_proto_rawDescGZIP() []byte {
	file_v1_admin_proto_rawDescOnce.Do(func() {
		file_v1_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_admin_proto_rawDescData)
	})
	return file_v1_admin_proto_rawDescData
}

var file_v1_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_v1_admin_proto_goTypes = []interface{}{
	(*ListServiceStatusesRequest)(nil),                                            // 0: jnoj.admin.v1.ListServiceStatusesRequest
	(*ListServiceStatusesResponse)(nil),                                           // 1: jnoj.admin.v1.ListServiceStatusesResponse
	(*ListServiceStatusesResponse_SanboxSystemInfo)(nil),                          // 2: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo
	(*ListServiceStatusesResponse_SanboxSystemInfo_Host)(nil),                     // 3: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Host
	(*ListServiceStatusesResponse_SanboxSystemInfo_Cpu)(nil),                      // 4: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Cpu
	(*ListServiceStatusesResponse_SanboxSystemInfo_Memory)(nil),                   // 5: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Memory
	(*ListServiceStatusesResponse_SanboxSystemInfo_Disk)(nil),                     // 6: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Disk
	(*ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat)(nil),            // 7: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Host.InfoStat
	(*ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat)(nil),             // 8: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Cpu.InfoStat
	(*ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice)(nil),        // 9: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Memory.SwapDevice
	(*ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat)(nil), // 10: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Memory.VirtualMemoryStat
	(*ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat)(nil),           // 11: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Disk.UsageStat
}
var file_v1_admin_proto_depIdxs = []int32{
	2,  // 0: jnoj.admin.v1.ListServiceStatusesResponse.sanbox_system_info:type_name -> jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo
	3,  // 1: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.host:type_name -> jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Host
	4,  // 2: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.cpu:type_name -> jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Cpu
	5,  // 3: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.memory:type_name -> jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Memory
	6,  // 4: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.disk:type_name -> jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Disk
	7,  // 5: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Host.info_stat:type_name -> jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Host.InfoStat
	8,  // 6: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Cpu.info_stat:type_name -> jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Cpu.InfoStat
	9,  // 7: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Memory.swap_device:type_name -> jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Memory.SwapDevice
	10, // 8: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Memory.virtual_memory:type_name -> jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Memory.VirtualMemoryStat
	11, // 9: jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Disk.usage_stat:type_name -> jnoj.admin.v1.ListServiceStatusesResponse.SanboxSystemInfo.Disk.UsageStat
	0,  // 10: jnoj.admin.v1.AdminService.ListServiceStatuses:input_type -> jnoj.admin.v1.ListServiceStatusesRequest
	1,  // 11: jnoj.admin.v1.AdminService.ListServiceStatuses:output_type -> jnoj.admin.v1.ListServiceStatusesResponse
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_v1_admin_proto_init() }
func file_v1_admin_proto_init() {
	if File_v1_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceStatusesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceStatusesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceStatusesResponse_SanboxSystemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceStatusesResponse_SanboxSystemInfo_Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceStatusesResponse_SanboxSystemInfo_Cpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceStatusesResponse_SanboxSystemInfo_Memory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceStatusesResponse_SanboxSystemInfo_Disk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceStatusesResponse_SanboxSystemInfo_Host_InfoStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceStatusesResponse_SanboxSystemInfo_Cpu_InfoStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceStatusesResponse_SanboxSystemInfo_Memory_SwapDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceStatusesResponse_SanboxSystemInfo_Memory_VirtualMemoryStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceStatusesResponse_SanboxSystemInfo_Disk_UsageStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_admin_proto_goTypes,
		DependencyIndexes: file_v1_admin_proto_depIdxs,
		MessageInfos:      file_v1_admin_proto_msgTypes,
	}.Build()
	File_v1_admin_proto = out.File
	file_v1_admin_proto_rawDesc = nil
	file_v1_admin_proto_goTypes = nil
	file_v1_admin_proto_depIdxs = nil
}
