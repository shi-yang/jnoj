// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: v1/sandbox.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source          string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Stdin           []string `protobuf:"bytes,2,rep,name=stdin,proto3" json:"stdin,omitempty"`
	Language        int32    `protobuf:"varint,3,opt,name=language,proto3" json:"language,omitempty"`
	MemoryLimit     int64    `protobuf:"varint,4,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	TimeLimit       int64    `protobuf:"varint,5,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`
	Answer          *string  `protobuf:"bytes,6,opt,name=answer,proto3,oneof" json:"answer,omitempty"`
	CheckerSource   *string  `protobuf:"bytes,7,opt,name=checker_source,json=checkerSource,proto3,oneof" json:"checker_source,omitempty"`
	CheckerLanguage *string  `protobuf:"bytes,8,opt,name=checker_language,json=checkerLanguage,proto3,oneof" json:"checker_language,omitempty"`
}

func (x *RunRequest) Reset() {
	*x = RunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRequest) ProtoMessage() {}

func (x *RunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRequest.ProtoReflect.Descriptor instead.
func (*RunRequest) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{0}
}

func (x *RunRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *RunRequest) GetStdin() []string {
	if x != nil {
		return x.Stdin
	}
	return nil
}

func (x *RunRequest) GetLanguage() int32 {
	if x != nil {
		return x.Language
	}
	return 0
}

func (x *RunRequest) GetMemoryLimit() int64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *RunRequest) GetTimeLimit() int64 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *RunRequest) GetAnswer() string {
	if x != nil && x.Answer != nil {
		return *x.Answer
	}
	return ""
}

func (x *RunRequest) GetCheckerSource() string {
	if x != nil && x.CheckerSource != nil {
		return *x.CheckerSource
	}
	return ""
}

func (x *RunRequest) GetCheckerLanguage() string {
	if x != nil && x.CheckerLanguage != nil {
		return *x.CheckerLanguage
	}
	return ""
}

type RunResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stdout          string `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr          string `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Time            int64  `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	Memory          int64  `protobuf:"varint,4,opt,name=memory,proto3" json:"memory,omitempty"`
	ExitCode        int32  `protobuf:"varint,5,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	ErrMsg          string `protobuf:"bytes,6,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	CheckerStdout   string `protobuf:"bytes,7,opt,name=checker_stdout,json=checkerStdout,proto3" json:"checker_stdout,omitempty"`
	CheckerExitCode int32  `protobuf:"varint,8,opt,name=checker_exit_code,json=checkerExitCode,proto3" json:"checker_exit_code,omitempty"`
}

func (x *RunResult) Reset() {
	*x = RunResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResult) ProtoMessage() {}

func (x *RunResult) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResult.ProtoReflect.Descriptor instead.
func (*RunResult) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{1}
}

func (x *RunResult) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *RunResult) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *RunResult) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *RunResult) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *RunResult) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *RunResult) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *RunResult) GetCheckerStdout() string {
	if x != nil {
		return x.CheckerStdout
	}
	return ""
}

func (x *RunResult) GetCheckerExitCode() int32 {
	if x != nil {
		return x.CheckerExitCode
	}
	return 0
}

type RunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     []*RunResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	CompileMsg string       `protobuf:"bytes,2,opt,name=compile_msg,json=compileMsg,proto3" json:"compile_msg,omitempty"`
}

func (x *RunResponse) Reset() {
	*x = RunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResponse) ProtoMessage() {}

func (x *RunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResponse.ProtoReflect.Descriptor instead.
func (*RunResponse) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{2}
}

func (x *RunResponse) GetResult() []*RunResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RunResponse) GetCompileMsg() string {
	if x != nil {
		return x.CompileMsg
	}
	return ""
}

type RunSubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId int64 `protobuf:"varint,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
}

func (x *RunSubmissionRequest) Reset() {
	*x = RunSubmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunSubmissionRequest) ProtoMessage() {}

func (x *RunSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunSubmissionRequest.ProtoReflect.Descriptor instead.
func (*RunSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{3}
}

func (x *RunSubmissionRequest) GetSubmissionId() int64 {
	if x != nil {
		return x.SubmissionId
	}
	return 0
}

type RunSubmissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunSubmissionResponse) Reset() {
	*x = RunSubmissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunSubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunSubmissionResponse) ProtoMessage() {}

func (x *RunSubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunSubmissionResponse.ProtoReflect.Descriptor instead.
func (*RunSubmissionResponse) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{4}
}

type RunProblemFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId     int32 `protobuf:"varint,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	ProblemFileId int32 `protobuf:"varint,2,opt,name=problem_file_id,json=problemFileId,proto3" json:"problem_file_id,omitempty"`
}

func (x *RunProblemFileRequest) Reset() {
	*x = RunProblemFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunProblemFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunProblemFileRequest) ProtoMessage() {}

func (x *RunProblemFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunProblemFileRequest.ProtoReflect.Descriptor instead.
func (*RunProblemFileRequest) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{5}
}

func (x *RunProblemFileRequest) GetProblemId() int32 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *RunProblemFileRequest) GetProblemFileId() int32 {
	if x != nil {
		return x.ProblemFileId
	}
	return 0
}

type RunProblemFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunProblemFileResponse) Reset() {
	*x = RunProblemFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunProblemFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunProblemFileResponse) ProtoMessage() {}

func (x *RunProblemFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunProblemFileResponse.ProtoReflect.Descriptor instead.
func (*RunProblemFileResponse) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{6}
}

type GetSystemInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSystemInfoRequest) Reset() {
	*x = GetSystemInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoRequest) ProtoMessage() {}

func (x *GetSystemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoRequest.ProtoReflect.Descriptor instead.
func (*GetSystemInfoRequest) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{7}
}

type GetSystemInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host   *GetSystemInfoResponse_Host   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Cpu    *GetSystemInfoResponse_Cpu    `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory *GetSystemInfoResponse_Memory `protobuf:"bytes,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk   *GetSystemInfoResponse_Disk   `protobuf:"bytes,4,opt,name=disk,proto3" json:"disk,omitempty"`
}

func (x *GetSystemInfoResponse) Reset() {
	*x = GetSystemInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse) ProtoMessage() {}

func (x *GetSystemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{8}
}

func (x *GetSystemInfoResponse) GetHost() *GetSystemInfoResponse_Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *GetSystemInfoResponse) GetCpu() *GetSystemInfoResponse_Cpu {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *GetSystemInfoResponse) GetMemory() *GetSystemInfoResponse_Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *GetSystemInfoResponse) GetDisk() *GetSystemInfoResponse_Disk {
	if x != nil {
		return x.Disk
	}
	return nil
}

type GetSystemInfoResponse_Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoStat *GetSystemInfoResponse_Host_InfoStat `protobuf:"bytes,1,opt,name=info_stat,json=infoStat,proto3" json:"info_stat,omitempty"`
}

func (x *GetSystemInfoResponse_Host) Reset() {
	*x = GetSystemInfoResponse_Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResponse_Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse_Host) ProtoMessage() {}

func (x *GetSystemInfoResponse_Host) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse_Host.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse_Host) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GetSystemInfoResponse_Host) GetInfoStat() *GetSystemInfoResponse_Host_InfoStat {
	if x != nil {
		return x.InfoStat
	}
	return nil
}

type GetSystemInfoResponse_Cpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Counts returns the number of physical or logical cores in the system
	Counts   int32                                 `protobuf:"varint,1,opt,name=counts,proto3" json:"counts,omitempty"`
	Percent  float32                               `protobuf:"fixed32,2,opt,name=percent,proto3" json:"percent,omitempty"`
	InfoStat []*GetSystemInfoResponse_Cpu_InfoStat `protobuf:"bytes,3,rep,name=info_stat,json=infoStat,proto3" json:"info_stat,omitempty"`
}

func (x *GetSystemInfoResponse_Cpu) Reset() {
	*x = GetSystemInfoResponse_Cpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResponse_Cpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse_Cpu) ProtoMessage() {}

func (x *GetSystemInfoResponse_Cpu) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse_Cpu.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse_Cpu) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{8, 1}
}

func (x *GetSystemInfoResponse_Cpu) GetCounts() int32 {
	if x != nil {
		return x.Counts
	}
	return 0
}

func (x *GetSystemInfoResponse_Cpu) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *GetSystemInfoResponse_Cpu) GetInfoStat() []*GetSystemInfoResponse_Cpu_InfoStat {
	if x != nil {
		return x.InfoStat
	}
	return nil
}

type GetSystemInfoResponse_Memory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwapDevice    []*GetSystemInfoResponse_Memory_SwapDevice      `protobuf:"bytes,1,rep,name=swap_device,json=swapDevice,proto3" json:"swap_device,omitempty"`
	VirtualMemory *GetSystemInfoResponse_Memory_VirtualMemoryStat `protobuf:"bytes,2,opt,name=virtual_memory,json=virtualMemory,proto3" json:"virtual_memory,omitempty"`
}

func (x *GetSystemInfoResponse_Memory) Reset() {
	*x = GetSystemInfoResponse_Memory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResponse_Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse_Memory) ProtoMessage() {}

func (x *GetSystemInfoResponse_Memory) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse_Memory.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse_Memory) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{8, 2}
}

func (x *GetSystemInfoResponse_Memory) GetSwapDevice() []*GetSystemInfoResponse_Memory_SwapDevice {
	if x != nil {
		return x.SwapDevice
	}
	return nil
}

func (x *GetSystemInfoResponse_Memory) GetVirtualMemory() *GetSystemInfoResponse_Memory_VirtualMemoryStat {
	if x != nil {
		return x.VirtualMemory
	}
	return nil
}

type GetSystemInfoResponse_Disk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsageStat *GetSystemInfoResponse_Disk_UsageStat `protobuf:"bytes,1,opt,name=usage_stat,json=usageStat,proto3" json:"usage_stat,omitempty"`
}

func (x *GetSystemInfoResponse_Disk) Reset() {
	*x = GetSystemInfoResponse_Disk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResponse_Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse_Disk) ProtoMessage() {}

func (x *GetSystemInfoResponse_Disk) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse_Disk.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse_Disk) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{8, 3}
}

func (x *GetSystemInfoResponse_Disk) GetUsageStat() *GetSystemInfoResponse_Disk_UsageStat {
	if x != nil {
		return x.UsageStat
	}
	return nil
}

type GetSystemInfoResponse_Host_InfoStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname             string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Uptime               uint64 `protobuf:"varint,2,opt,name=uptime,proto3" json:"uptime,omitempty"`
	BootTime             uint64 `protobuf:"varint,3,opt,name=bootTime,proto3" json:"bootTime,omitempty"`
	Procs                uint64 `protobuf:"varint,4,opt,name=procs,proto3" json:"procs,omitempty"`
	Os                   string `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	Platform             string `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformFamily       string `protobuf:"bytes,7,opt,name=platformFamily,proto3" json:"platformFamily,omitempty"`
	PlatformVersion      string `protobuf:"bytes,8,opt,name=platformVersion,proto3" json:"platformVersion,omitempty"`
	KernelVersion        string `protobuf:"bytes,9,opt,name=kernelVersion,proto3" json:"kernelVersion,omitempty"`
	KernelArch           string `protobuf:"bytes,10,opt,name=kernelArch,proto3" json:"kernelArch,omitempty"`
	VirtualizationSystem string `protobuf:"bytes,11,opt,name=virtualizationSystem,proto3" json:"virtualizationSystem,omitempty"`
	VirtualizationRole   string `protobuf:"bytes,12,opt,name=virtualizationRole,proto3" json:"virtualizationRole,omitempty"`
	HostId               string `protobuf:"bytes,13,opt,name=hostId,proto3" json:"hostId,omitempty"`
}

func (x *GetSystemInfoResponse_Host_InfoStat) Reset() {
	*x = GetSystemInfoResponse_Host_InfoStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResponse_Host_InfoStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse_Host_InfoStat) ProtoMessage() {}

func (x *GetSystemInfoResponse_Host_InfoStat) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse_Host_InfoStat.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse_Host_InfoStat) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{8, 0, 0}
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetBootTime() uint64 {
	if x != nil {
		return x.BootTime
	}
	return 0
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetProcs() uint64 {
	if x != nil {
		return x.Procs
	}
	return 0
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetKernelArch() string {
	if x != nil {
		return x.KernelArch
	}
	return ""
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetVirtualizationSystem() string {
	if x != nil {
		return x.VirtualizationSystem
	}
	return ""
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetVirtualizationRole() string {
	if x != nil {
		return x.VirtualizationRole
	}
	return ""
}

func (x *GetSystemInfoResponse_Host_InfoStat) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

type GetSystemInfoResponse_Cpu_InfoStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu        int32    `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	VendorId   string   `protobuf:"bytes,2,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	Family     string   `protobuf:"bytes,3,opt,name=family,proto3" json:"family,omitempty"`
	Model      string   `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Stepping   int32    `protobuf:"varint,5,opt,name=stepping,proto3" json:"stepping,omitempty"`
	PhysicalId string   `protobuf:"bytes,6,opt,name=physical_id,json=physicalId,proto3" json:"physical_id,omitempty"`
	CoreId     string   `protobuf:"bytes,7,opt,name=core_id,json=coreId,proto3" json:"core_id,omitempty"`
	Cores      int32    `protobuf:"varint,8,opt,name=cores,proto3" json:"cores,omitempty"`
	ModelName  string   `protobuf:"bytes,9,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	Mhz        float64  `protobuf:"fixed64,10,opt,name=mhz,proto3" json:"mhz,omitempty"`
	CacheSize  int32    `protobuf:"varint,11,opt,name=cache_size,json=cacheSize,proto3" json:"cache_size,omitempty"`
	Flags      []string `protobuf:"bytes,12,rep,name=flags,proto3" json:"flags,omitempty"`
	Microcode  string   `protobuf:"bytes,13,opt,name=microcode,proto3" json:"microcode,omitempty"`
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) Reset() {
	*x = GetSystemInfoResponse_Cpu_InfoStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse_Cpu_InfoStat) ProtoMessage() {}

func (x *GetSystemInfoResponse_Cpu_InfoStat) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse_Cpu_InfoStat.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse_Cpu_InfoStat) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{8, 1, 0}
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetStepping() int32 {
	if x != nil {
		return x.Stepping
	}
	return 0
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetPhysicalId() string {
	if x != nil {
		return x.PhysicalId
	}
	return ""
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetCoreId() string {
	if x != nil {
		return x.CoreId
	}
	return ""
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetMhz() float64 {
	if x != nil {
		return x.Mhz
	}
	return 0
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetCacheSize() int32 {
	if x != nil {
		return x.CacheSize
	}
	return 0
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *GetSystemInfoResponse_Cpu_InfoStat) GetMicrocode() string {
	if x != nil {
		return x.Microcode
	}
	return ""
}

type GetSystemInfoResponse_Memory_SwapDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UsedBytes uint64 `protobuf:"varint,2,opt,name=used_bytes,json=usedBytes,proto3" json:"used_bytes,omitempty"`
	FreeBytes uint64 `protobuf:"varint,3,opt,name=free_bytes,json=freeBytes,proto3" json:"free_bytes,omitempty"`
}

func (x *GetSystemInfoResponse_Memory_SwapDevice) Reset() {
	*x = GetSystemInfoResponse_Memory_SwapDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResponse_Memory_SwapDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse_Memory_SwapDevice) ProtoMessage() {}

func (x *GetSystemInfoResponse_Memory_SwapDevice) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse_Memory_SwapDevice.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse_Memory_SwapDevice) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{8, 2, 0}
}

func (x *GetSystemInfoResponse_Memory_SwapDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSystemInfoResponse_Memory_SwapDevice) GetUsedBytes() uint64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *GetSystemInfoResponse_Memory_SwapDevice) GetFreeBytes() uint64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

type GetSystemInfoResponse_Memory_VirtualMemoryStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       uint64  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Available   uint64  `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	Used        uint64  `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	UsedPercent float64 `protobuf:"fixed64,4,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	Free        uint64  `protobuf:"varint,5,opt,name=free,proto3" json:"free,omitempty"`
	Active      uint64  `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	Inactive    uint64  `protobuf:"varint,7,opt,name=inactive,proto3" json:"inactive,omitempty"`
	SwapTotal   uint64  `protobuf:"varint,8,opt,name=swap_total,json=swapTotal,proto3" json:"swap_total,omitempty"`
	SwapFree    uint64  `protobuf:"varint,9,opt,name=swap_free,json=swapFree,proto3" json:"swap_free,omitempty"`
}

func (x *GetSystemInfoResponse_Memory_VirtualMemoryStat) Reset() {
	*x = GetSystemInfoResponse_Memory_VirtualMemoryStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResponse_Memory_VirtualMemoryStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse_Memory_VirtualMemoryStat) ProtoMessage() {}

func (x *GetSystemInfoResponse_Memory_VirtualMemoryStat) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse_Memory_VirtualMemoryStat.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse_Memory_VirtualMemoryStat) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{8, 2, 1}
}

func (x *GetSystemInfoResponse_Memory_VirtualMemoryStat) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetSystemInfoResponse_Memory_VirtualMemoryStat) GetAvailable() uint64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *GetSystemInfoResponse_Memory_VirtualMemoryStat) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *GetSystemInfoResponse_Memory_VirtualMemoryStat) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *GetSystemInfoResponse_Memory_VirtualMemoryStat) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *GetSystemInfoResponse_Memory_VirtualMemoryStat) GetActive() uint64 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *GetSystemInfoResponse_Memory_VirtualMemoryStat) GetInactive() uint64 {
	if x != nil {
		return x.Inactive
	}
	return 0
}

func (x *GetSystemInfoResponse_Memory_VirtualMemoryStat) GetSwapTotal() uint64 {
	if x != nil {
		return x.SwapTotal
	}
	return 0
}

func (x *GetSystemInfoResponse_Memory_VirtualMemoryStat) GetSwapFree() uint64 {
	if x != nil {
		return x.SwapFree
	}
	return 0
}

type GetSystemInfoResponse_Disk_UsageStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path              string  `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Fst               string  `protobuf:"bytes,2,opt,name=fst,proto3" json:"fst,omitempty"`
	Total             uint64  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Free              uint64  `protobuf:"varint,4,opt,name=free,proto3" json:"free,omitempty"`
	Used              uint64  `protobuf:"varint,5,opt,name=used,proto3" json:"used,omitempty"`
	UsedPercent       float64 `protobuf:"fixed64,6,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	InodesTotal       uint64  `protobuf:"varint,7,opt,name=inodes_total,json=inodesTotal,proto3" json:"inodes_total,omitempty"`
	InodesUsed        uint64  `protobuf:"varint,8,opt,name=inodes_used,json=inodesUsed,proto3" json:"inodes_used,omitempty"`
	InodesFree        uint64  `protobuf:"varint,9,opt,name=inodes_free,json=inodesFree,proto3" json:"inodes_free,omitempty"`
	InodesUsedPercent float64 `protobuf:"fixed64,10,opt,name=inodes_used_percent,json=inodesUsedPercent,proto3" json:"inodes_used_percent,omitempty"`
}

func (x *GetSystemInfoResponse_Disk_UsageStat) Reset() {
	*x = GetSystemInfoResponse_Disk_UsageStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_sandbox_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResponse_Disk_UsageStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse_Disk_UsageStat) ProtoMessage() {}

func (x *GetSystemInfoResponse_Disk_UsageStat) ProtoReflect() protoreflect.Message {
	mi := &file_v1_sandbox_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse_Disk_UsageStat.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse_Disk_UsageStat) Descriptor() ([]byte, []int) {
	return file_v1_sandbox_proto_rawDescGZIP(), []int{8, 3, 0}
}

func (x *GetSystemInfoResponse_Disk_UsageStat) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetSystemInfoResponse_Disk_UsageStat) GetFst() string {
	if x != nil {
		return x.Fst
	}
	return ""
}

func (x *GetSystemInfoResponse_Disk_UsageStat) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetSystemInfoResponse_Disk_UsageStat) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *GetSystemInfoResponse_Disk_UsageStat) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *GetSystemInfoResponse_Disk_UsageStat) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *GetSystemInfoResponse_Disk_UsageStat) GetInodesTotal() uint64 {
	if x != nil {
		return x.InodesTotal
	}
	return 0
}

func (x *GetSystemInfoResponse_Disk_UsageStat) GetInodesUsed() uint64 {
	if x != nil {
		return x.InodesUsed
	}
	return 0
}

func (x *GetSystemInfoResponse_Disk_UsageStat) GetInodesFree() uint64 {
	if x != nil {
		return x.InodesFree
	}
	return 0
}

func (x *GetSystemInfoResponse_Disk_UsageStat) GetInodesUsedPercent() float64 {
	if x != nil {
		return x.InodesUsedPercent
	}
	return 0
}

var File_v1_sandbox_proto protoreflect.FileDescriptor

var file_v1_sandbox_proto_rawDesc = []byte{
	0x0a, 0x10, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x2e, 0x76, 0x31, 0x22, 0xc4, 0x02, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x64, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x64, 0x69, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b,
	0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x09, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f,
	0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x64, 0x6f, 0x75,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x69,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x45, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x62, 0x0a,
	0x0b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6a,
	0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x4d, 0x73,
	0x67, 0x22, 0x3b, 0x0a, 0x14, 0x52, 0x75, 0x6e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x17,
	0x0a, 0x15, 0x52, 0x75, 0x6e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x15, 0x52, 0x75, 0x6e, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x75, 0x6e, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xcf, 0x11, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x70, 0x75, 0x52, 0x03, 0x63,
	0x70, 0x75, 0x12, 0x45, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x69, 0x73,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73,
	0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x69, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x1a, 0x8c, 0x04, 0x0a, 0x04, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x52, 0x08, 0x69, 0x6e,
	0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xb0, 0x03, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x28, 0x0a,
	0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x12, 0x32, 0x0a,
	0x14, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x2e, 0x0a, 0x12, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x1a, 0xe3, 0x03, 0x0a, 0x03, 0x43, 0x70,
	0x75, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x70, 0x75, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x66,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xd7, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x63, 0x70, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x68,
	0x7a, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x68, 0x7a, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x1a,
	0xb0, 0x04, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x59, 0x0a, 0x0b, 0x73, 0x77,
	0x61, 0x70, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x53,
	0x77, 0x61, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0a, 0x73, 0x77, 0x61, 0x70, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0d,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x1a, 0x5e, 0x0a,
	0x0a, 0x53, 0x77, 0x61, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x1a, 0x82, 0x02,
	0x0a, 0x11, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x72,
	0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x6e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x77, 0x61, 0x70,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x66, 0x72,
	0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x46, 0x72,
	0x65, 0x65, 0x1a, 0x86, 0x03, 0x0a, 0x04, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x54, 0x0a, 0x0a, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x2e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x09, 0x75, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x1a, 0xa7, 0x02, 0x0a, 0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x66, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x46, 0x72, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x55, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x32, 0xfd, 0x02, 0x0a, 0x0e,
	0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42,
	0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x1b, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x60, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6a, 0x6e, 0x6f,
	0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x75, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x6a, 0x6e, 0x6f,
	0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x6a, 0x6e, 0x6f, 0x6a, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_sandbox_proto_rawDescOnce sync.Once
	file_v1_sandbox_proto_rawDescData = file_v1_sandbox_proto_rawDesc
)

func file_v1_sandbox_proto_rawDescGZIP() []byte {
	file_v1_sandbox_proto_rawDescOnce.Do(func() {
		file_v1_sandbox_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_sandbox_proto_rawDescData)
	})
	return file_v1_sandbox_proto_rawDescData
}

var file_v1_sandbox_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_v1_sandbox_proto_goTypes = []interface{}{
	(*RunRequest)(nil),                                     // 0: jnoj.sandbox.v1.RunRequest
	(*RunResult)(nil),                                      // 1: jnoj.sandbox.v1.RunResult
	(*RunResponse)(nil),                                    // 2: jnoj.sandbox.v1.RunResponse
	(*RunSubmissionRequest)(nil),                           // 3: jnoj.sandbox.v1.RunSubmissionRequest
	(*RunSubmissionResponse)(nil),                          // 4: jnoj.sandbox.v1.RunSubmissionResponse
	(*RunProblemFileRequest)(nil),                          // 5: jnoj.sandbox.v1.RunProblemFileRequest
	(*RunProblemFileResponse)(nil),                         // 6: jnoj.sandbox.v1.RunProblemFileResponse
	(*GetSystemInfoRequest)(nil),                           // 7: jnoj.sandbox.v1.GetSystemInfoRequest
	(*GetSystemInfoResponse)(nil),                          // 8: jnoj.sandbox.v1.GetSystemInfoResponse
	(*GetSystemInfoResponse_Host)(nil),                     // 9: jnoj.sandbox.v1.GetSystemInfoResponse.Host
	(*GetSystemInfoResponse_Cpu)(nil),                      // 10: jnoj.sandbox.v1.GetSystemInfoResponse.Cpu
	(*GetSystemInfoResponse_Memory)(nil),                   // 11: jnoj.sandbox.v1.GetSystemInfoResponse.Memory
	(*GetSystemInfoResponse_Disk)(nil),                     // 12: jnoj.sandbox.v1.GetSystemInfoResponse.Disk
	(*GetSystemInfoResponse_Host_InfoStat)(nil),            // 13: jnoj.sandbox.v1.GetSystemInfoResponse.Host.InfoStat
	(*GetSystemInfoResponse_Cpu_InfoStat)(nil),             // 14: jnoj.sandbox.v1.GetSystemInfoResponse.Cpu.InfoStat
	(*GetSystemInfoResponse_Memory_SwapDevice)(nil),        // 15: jnoj.sandbox.v1.GetSystemInfoResponse.Memory.SwapDevice
	(*GetSystemInfoResponse_Memory_VirtualMemoryStat)(nil), // 16: jnoj.sandbox.v1.GetSystemInfoResponse.Memory.VirtualMemoryStat
	(*GetSystemInfoResponse_Disk_UsageStat)(nil),           // 17: jnoj.sandbox.v1.GetSystemInfoResponse.Disk.UsageStat
}
var file_v1_sandbox_proto_depIdxs = []int32{
	1,  // 0: jnoj.sandbox.v1.RunResponse.result:type_name -> jnoj.sandbox.v1.RunResult
	9,  // 1: jnoj.sandbox.v1.GetSystemInfoResponse.host:type_name -> jnoj.sandbox.v1.GetSystemInfoResponse.Host
	10, // 2: jnoj.sandbox.v1.GetSystemInfoResponse.cpu:type_name -> jnoj.sandbox.v1.GetSystemInfoResponse.Cpu
	11, // 3: jnoj.sandbox.v1.GetSystemInfoResponse.memory:type_name -> jnoj.sandbox.v1.GetSystemInfoResponse.Memory
	12, // 4: jnoj.sandbox.v1.GetSystemInfoResponse.disk:type_name -> jnoj.sandbox.v1.GetSystemInfoResponse.Disk
	13, // 5: jnoj.sandbox.v1.GetSystemInfoResponse.Host.info_stat:type_name -> jnoj.sandbox.v1.GetSystemInfoResponse.Host.InfoStat
	14, // 6: jnoj.sandbox.v1.GetSystemInfoResponse.Cpu.info_stat:type_name -> jnoj.sandbox.v1.GetSystemInfoResponse.Cpu.InfoStat
	15, // 7: jnoj.sandbox.v1.GetSystemInfoResponse.Memory.swap_device:type_name -> jnoj.sandbox.v1.GetSystemInfoResponse.Memory.SwapDevice
	16, // 8: jnoj.sandbox.v1.GetSystemInfoResponse.Memory.virtual_memory:type_name -> jnoj.sandbox.v1.GetSystemInfoResponse.Memory.VirtualMemoryStat
	17, // 9: jnoj.sandbox.v1.GetSystemInfoResponse.Disk.usage_stat:type_name -> jnoj.sandbox.v1.GetSystemInfoResponse.Disk.UsageStat
	0,  // 10: jnoj.sandbox.v1.SandboxService.Run:input_type -> jnoj.sandbox.v1.RunRequest
	3,  // 11: jnoj.sandbox.v1.SandboxService.RunSubmission:input_type -> jnoj.sandbox.v1.RunSubmissionRequest
	5,  // 12: jnoj.sandbox.v1.SandboxService.RunProblemFile:input_type -> jnoj.sandbox.v1.RunProblemFileRequest
	7,  // 13: jnoj.sandbox.v1.SandboxService.GetSystemInfo:input_type -> jnoj.sandbox.v1.GetSystemInfoRequest
	2,  // 14: jnoj.sandbox.v1.SandboxService.Run:output_type -> jnoj.sandbox.v1.RunResponse
	4,  // 15: jnoj.sandbox.v1.SandboxService.RunSubmission:output_type -> jnoj.sandbox.v1.RunSubmissionResponse
	6,  // 16: jnoj.sandbox.v1.SandboxService.RunProblemFile:output_type -> jnoj.sandbox.v1.RunProblemFileResponse
	8,  // 17: jnoj.sandbox.v1.SandboxService.GetSystemInfo:output_type -> jnoj.sandbox.v1.GetSystemInfoResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_v1_sandbox_proto_init() }
func file_v1_sandbox_proto_init() {
	if File_v1_sandbox_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_sandbox_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunSubmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunSubmissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunProblemFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunProblemFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResponse_Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResponse_Cpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResponse_Memory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResponse_Disk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResponse_Host_InfoStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResponse_Cpu_InfoStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResponse_Memory_SwapDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResponse_Memory_VirtualMemoryStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_sandbox_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResponse_Disk_UsageStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_sandbox_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_sandbox_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_sandbox_proto_goTypes,
		DependencyIndexes: file_v1_sandbox_proto_depIdxs,
		MessageInfos:      file_v1_sandbox_proto_msgTypes,
	}.Build()
	File_v1_sandbox_proto = out.File
	file_v1_sandbox_proto_rawDesc = nil
	file_v1_sandbox_proto_goTypes = nil
	file_v1_sandbox_proto_depIdxs = nil
}
