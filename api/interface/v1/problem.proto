syntax = "proto3";

package jnoj.interface.v1;

import "google/api/annotations.proto";

option go_package = "api/interface/v1;v1";

service ProblemService {
    // 题目列表
    rpc ListProblems (ListProblemsRequest) returns (ListProblemsResponse) {
        option (google.api.http) = {
            get: "/problems"
        };
    };
    // 题目详情
    rpc GetProblem (GetProblemRequest) returns (Problem) {
        option (google.api.http) = {
            get: "/problems/{id}"
        };
    };
    // 创建题目
    rpc CreateProblem (CreateProblemRequest) returns (CreateProblemResponse) {
        option (google.api.http) = {
            post: "/problems"
            body: "*"
        };
    };
    // 创建题目
    rpc UpdateProblem (UpdateProblemRequest) returns (Problem) {
        option (google.api.http) = {
            post: "/problems"
            body: "*"
        };
    };

    // 获取题目描述列表
    rpc ListProblemStatements (ListProblemStatementsRequest) returns (ListProblemStatementsResponse) {
        option (google.api.http) = {
            get: "/problems/{id}/statements"
        };
    };
    // 获取题目描述详情
    rpc GetProblemStatement (GetProblemStatementRequest) returns (ProblemStatement) {
        option (google.api.http) = {
            get: "/problems/{id}/statements"
        };
    };
    // 创建题目描述
    rpc CreateProblemStatement (CreateProblemStatementRequest) returns (ProblemStatement) {
        option (google.api.http) = {
            post: "/problems/{id}/statements"
            body: "*"
        };
    };
    // 更新题目描述
    rpc UpdateProblemStatement (UpdateProblemStatementRequest) returns (ProblemStatement) {
        option (google.api.http) = {
            put: "/problems/{id}/statements"
            body: "*"
        };
    }
    // 删除题目描述
    rpc DeleteProblemStatement (DeleteProblemStatementRequest) returns (ProblemStatement) {
        option (google.api.http) = {
            delete: "/problems/{id}/statements"
        };
    }

    // 获取题目裁判程序列表
    rpc ListProblemCheckers (ListProblemCheckersRequest) returns (ListProblemCheckersResponse) {
        option (google.api.http) = {
            get: "/problems/{id}/checkers"
        };
    };
    // 获取题目裁判程序
    rpc GetProblemChecker (GetProblemCheckerRequest) returns (ProblemChecker) {
        option (google.api.http) = {
            get: "/problems/{id}/checkers"
        };
    };
    // 创建题目裁判程序
    rpc CreateProblemChecker (CreateProblemCheckerRequest) returns (ProblemChecker) {
        option (google.api.http) = {
            post: "/problems/{id}/checkers"
            body: "*"
        };
    };
    // 更新题目裁判程序
    rpc UpdateProblemChecker (UpdateProblemCheckerRequest) returns (ProblemChecker) {
        option (google.api.http) = {
            put: "/problems/{id}/checkers"
            body: "*"
        };
    }

    // 获取题目测试点列表
    rpc ListProblemTests (ListProblemTestsRequest) returns (ListProblemTestsResponse) {
        option (google.api.http) = {
            get: "/problems/{id}/tests"
        };
    };
    // 获取题目测试点详情
    rpc GetProblemTest (GetProblemTestRequest) returns (ProblemTest) {
        option (google.api.http) = {
            get: "/problems/{id}/tests"
        };
    };
    // 创建题目测试点
    rpc CreateProblemTest (CreateProblemTestRequest) returns (ProblemTest) {
        option (google.api.http) = {
            post: "/problems/{id}/tests"
            body: "*"
        };
    };
    // 更新题目测试点
    rpc UpdateProblemTest (UpdateProblemTestRequest) returns (ProblemTest) {
        option (google.api.http) = {
            put: "/problems/{id}/tests"
            body: "*"
        };
    }
    // 删除题目测试点
    rpc DeleteProblemTest (DeleteProblemTestRequest) returns (ProblemTest) {
        option (google.api.http) = {
            delete: "/problems/{id}/tests"
        };
    }

    // 获取题目解答程序列表
    rpc ListProblemSolutions (ListProblemSolutionsRequest) returns (ListProblemSolutionsResponse) {
        option (google.api.http) = {
            get: "/problems/{id}/solution"
        };
    };
    // 获取题目解答程序详情
    rpc GetProblemSolution (GetProblemSolutionRequest) returns (ProblemSolution) {
        option (google.api.http) = {
            get: "/problems/{id}/solution"
        };
    };
    // 创建题目解答程序
    rpc CreateProblemSolution (CreateProblemSolutionRequest) returns (ProblemSolution) {
        option (google.api.http) = {
            post: "/problems/{id}/solution"
            body: "*"
        };
    };
    // 更新题目解答程序
    rpc UpdateProblemSolution (UpdateProblemSolutionRequest) returns (ProblemSolution) {
        option (google.api.http) = {
            put: "/problems/{id}/solution"
            body: "*"
        };
    }
    // 删除题目解答程序
    rpc DeleteProblemSolution (DeleteProblemSolutionRequest) returns (ProblemSolution) {
        option (google.api.http) = {
            delete: "/problems/{id}/solution"
        };
    }
}

// 题目
message Problem {
    // 题目ID
    int32 id = 1;
    // 时间限制
    int32 time_limit = 2;
    // 内存限制
    int32 memory_limit = 3;
    // 题目描述
    repeated ProblemStatement statements = 4;
    // 样例
    message SampleTest {
        string input = 1;
        string output = 2;
    }
    SampleTest sample_test = 5;
}

// 题目描述
message ProblemStatement {
    int32 id = 1;
    int32 problem_id = 2;
    int32 language = 3;
    string name = 4;
    string legend = 5;
    string input = 6;
    string output = 7;
    string note = 8;
}

message ListProblemsRequest {
    int32 page = 1;
    int32 per_page = 2;
}

message ListProblemsResponse {
    repeated Problem data = 1; // 题目列表
    int64 count = 2; // 总数
}

message GetProblemRequest {
    int32 id = 1;
}

message CreateProblemRequest {
    // 题目名称
    string name = 1;
    // 题目类型
    int32 type = 2;
}

message CreateProblemResponse {
    int32 id = 1;
}

message UpdateProblemRequest {
    int32 id = 1;
    int64 time_limit = 2;
    int64 memory_limit = 3;
}

message ListProblemStatementsRequest {
    int32 id = 1;
}

message ListProblemStatementsResponse {

}

message GetProblemStatementRequest {
    int32 id = 1;
}

message CreateProblemStatementRequest {
    int32 id = 1;
    string language = 2;
}

message UpdateProblemStatementRequest {
    int32 id = 1;
}

message DeleteProblemStatementRequest {
    int32 id = 1;
    int32 statement_id = 2;
}

message ListProblemCheckersRequest {
    int32 id = 1;
}

message ListProblemCheckersResponse {

}

message GetProblemCheckerRequest {
    int32 id = 1;
}

message ProblemChecker {

}

message CreateProblemCheckerRequest {
    int32 id = 1;
}

message UpdateProblemCheckerRequest {
    int32 id = 1;
}

message ListProblemTestsRequest {
    int32 id = 1;
}

message ListProblemTestsResponse {

}

message GetProblemTestRequest {
    int32 id = 1;
}

message ProblemTest {

}

message CreateProblemTestRequest {
    int32 id = 1;
}

message UpdateProblemTestRequest {
    int32 id = 1;
}

message DeleteProblemTestRequest {
    int32 id = 1;
}

message ListProblemSolutionsRequest {
    int32 id = 1;
}

message ListProblemSolutionsResponse {
    int32 id = 1;
}

message GetProblemSolutionRequest {
    int32 id = 1;
}

message ProblemSolution {

}

message CreateProblemSolutionRequest {
    int32 id = 1;
}

message UpdateProblemSolutionRequest {
    int32 id = 1;
}

message DeleteProblemSolutionRequest {
    int32 id = 1;
}