syntax = "proto3";

package jnoj.interface.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "api/interface/v1;v1";

service ProblemService {
    // 题目列表
    rpc ListProblems (ListProblemsRequest) returns (ListProblemsResponse) {
        option (google.api.http) = {
            get: "/problems"
        };
    };
    // 题目详情
    rpc GetProblem (GetProblemRequest) returns (Problem) {
        option (google.api.http) = {
            get: "/problems/{id}"
        };
    };
    // 创建题目
    rpc CreateProblem (CreateProblemRequest) returns (CreateProblemResponse) {
        option (google.api.http) = {
            post: "/problems"
            body: "*"
        };
    };
    // 创建题目
    rpc UpdateProblem (UpdateProblemRequest) returns (Problem) {
        option (google.api.http) = {
            put: "/problems/{id}"
            body: "*"
        };
    };
    // 获取题目描述列表
    rpc ListProblemStatements (ListProblemStatementsRequest) returns (ListProblemStatementsResponse) {
        option (google.api.http) = {
            get: "/problems/{id}/statements"
        };
    };
    // 获取题目描述详情
    rpc GetProblemStatement (GetProblemStatementRequest) returns (ProblemStatement) {
        option (google.api.http) = {
            get: "/problems/{id}/statements"
        };
    };
    // 创建题目描述
    rpc CreateProblemStatement (CreateProblemStatementRequest) returns (ProblemStatement) {
        option (google.api.http) = {
            post: "/problems/{id}/statements"
            body: "*"
        };
    };
    // 更新题目描述
    rpc UpdateProblemStatement (UpdateProblemStatementRequest) returns (ProblemStatement) {
        option (google.api.http) = {
            put: "/problems/{id}/statements/{sid}"
            body: "*"
        };
    }
    // 删除题目描述
    rpc DeleteProblemStatement (DeleteProblemStatementRequest) returns (ProblemStatement) {
        option (google.api.http) = {
            delete: "/problems/{id}/statements/{sid}"
        };
    }
    // 获取题目测试点列表
    rpc ListProblemTests (ListProblemTestsRequest) returns (ListProblemTestsResponse) {
        option (google.api.http) = {
            get: "/problems/{id}/tests"
        };
    };
    // 获取题目测试点详情
    rpc GetProblemTest (GetProblemTestRequest) returns (ProblemTest) {
        option (google.api.http) = {
            get: "/problems/{id}/tests"
        };
    };
    // 创建题目测试点
    rpc CreateProblemTest (CreateProblemTestRequest) returns (ProblemTest) {
        option (google.api.http) = {
            post: "/problems/{id}/tests"
            body: "*"
        };
    };
    // 更新题目测试点
    rpc UpdateProblemTest (UpdateProblemTestRequest) returns (ProblemTest) {
        option (google.api.http) = {
            put: "/problems/{id}/tests/{tid}"
            body: "*"
        };
    }
    // 删除题目测试点
    rpc DeleteProblemTest (DeleteProblemTestRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/problems/{id}/tests/{tid}"
        };
    }
    // 获取题目文件列表
    rpc ListProblemFiles (ListProblemFilesRequest) returns (ListProblemFilesResponse) {
        option (google.api.http) = {
            get: "/problems/{id}/files"
        };
    };
    // 获取题目文件详情
    rpc GetProblemFile (GetProblemFileRequest) returns (ProblemFile) {
        option (google.api.http) = {
            get: "/problems/{id}/files/{sid}"
        };
    };
    // 创建题目文件
    rpc CreateProblemFile (CreateProblemFileRequest) returns (ProblemFile) {
        option (google.api.http) = {
            post: "/problems/{id}/files"
            body: "*"
        };
    };
    // 更新题目文件
    rpc UpdateProblemFile (UpdateProblemFileRequest) returns (ProblemFile) {
        option (google.api.http) = {
            put: "/problems/{id}/files/{sid}"
            body: "*"
        };
    }
    // 删除题目文件
    rpc DeleteProblemFile (DeleteProblemFileRequest) returns (ProblemFile) {
        option (google.api.http) = {
            delete: "/problems/{id}/files/{sid}"
        };
    }
    // 运行题目文件
    rpc RunProblemFile (RunProblemFileRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/problem_files/{sid}/run"
            body: "*"
        };
    }
    // 获取std裁判程序
    rpc ListProblemStdCheckers (ListProblemStdCheckersRequest) returns (ListProblemStdCheckersResponse) {
        option (google.api.http) = {
            get: "/problems/{id}/std_checkers"
        };
    }
    // 设置裁判程序
    rpc UpdateProblemChecker (UpdateProblemCheckerRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/problems/{id}/checkers"
            body: "*"
        };
    }
    // 验证题目完整性
    rpc VerifyProblem (VerifyProblemRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/problems/{id}/verify"
            body: "*"
        };
    }
    // 获取题目验证状态
    rpc GetProblemVerification (GetProblemVerificationRequest) returns (ProblemVerification) {
        option (google.api.http) = {
            get: "/problems/{id}/verification"
        };
    }
}

// 题目
message Problem {
    // 题目ID
    int32 id = 1;
    // 名称
    string name = 2;
    // 时间限制
    int32 time_limit = 3;
    // 内存限制
    int32 memory_limit = 4;
    // 题目描述
    repeated ProblemStatement statements = 5;
    int32 accepted_count = 6;
    int32 submit_count = 7;
    int32 status = 8;
    // 样例
    message SampleTest {
        string input = 1;
        string output = 2;
    }
    repeated SampleTest sample_tests = 9;
    google.protobuf.Timestamp created_at = 10;
    google.protobuf.Timestamp updated_at = 11;
}

// 题目描述
message ProblemStatement {
    int32 id = 1;
    int32 problem_id = 2;
    string language = 3;
    string name = 4;
    string legend = 5;
    string input = 6;
    string output = 7;
    string note = 8;
}

message ListProblemsRequest {
    string name = 1;
    int32 user_id = 2;
    int32 page = 3;
    int32 per_page = 4;
}

message ListProblemsResponse {
    repeated Problem data = 1; // 题目列表
    int64 count = 2; // 总数
}

message GetProblemRequest {
    int32 id = 1;
}

message CreateProblemRequest {
    // 题目名称
    string name = 1;
    // 题目类型
    int32 type = 2;
}

message CreateProblemResponse {
    // 题目ID
    int32 id = 1;
}

message UpdateProblemRequest {
    int32 id = 1;
    int64 time_limit = 2;
    int64 memory_limit = 3;
    int32 status = 4;
}

message ListProblemStatementsRequest {
    int32 id = 1;
    int32 page = 2;
    int32 per_page = 3;
}

message ListProblemStatementsResponse {
    repeated ProblemStatement data = 1;
    int64 total = 2;
}

message GetProblemStatementRequest {
    int32 id = 1;
}

message CreateProblemStatementRequest {
    int32 id = 1;
    string language = 2;
}

message UpdateProblemStatementRequest {
    int32 id = 1;
    int32 sid = 2;
    string language = 3;
    string name = 4;
    string input = 5;
    string output = 6;
    string note = 7;
    string legend = 8;
}

message DeleteProblemStatementRequest {
    int32 id = 1;
    int32 sid = 2;
}

message ListProblemTestsRequest {
    int32 id = 1;
    int32 page = 2;
    int32 per_page = 3;
}

message ListProblemTestsResponse {
    repeated ProblemTest data = 1;
    int64 count = 2;
}

message GetProblemTestRequest {
    int32 id = 1;
}

message ProblemTest {
    string id = 1;
    string content = 2;
    int64 input_size = 3;
    string remark = 4;
    int32 user_id = 5;
    bool is_example = 6;
    google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
}

message CreateProblemTestRequest {
    int32 id = 1;
    bytes input_file_content = 2;
    string filename = 3;
}

message UpdateProblemTestRequest {
    int32 id = 1;
    string tid = 2;
    bool is_example = 3;
    string remark = 4;
}

message DeleteProblemTestRequest {
    int32 id = 1;
    string tid = 2;
}

message ListProblemFilesRequest {
    int32 id = 1;
    string file_type = 2;
    int32 page = 3;
    int32 per_page = 4;
}

message ListProblemFilesResponse {
    repeated ProblemFile data = 1;
    int64 total = 2;
}

message GetProblemFileRequest {
    int32 id = 1;
    int32 sid = 2;
}

message ProblemFile {
    int32 id = 1;
    string name = 2;
    string content = 3;
    string type = 4;
    int32 user_id = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;
}

message CreateProblemFileRequest {
    int32 id = 1;
    string name = 2;
    string content = 3;
    string type = 4;
    string file_type = 5;
}

message UpdateProblemFileRequest {
    int32 id = 1;
    int32 sid = 2;
    string name = 3;
    string content = 4;
    string type = 5;
}

message DeleteProblemFileRequest {
    int32 id = 1;
    int32 sid = 2;
}

message RunProblemFileRequest {
    int32 sid = 1;
}

message ListProblemStdCheckersRequest {
    int32 id = 1;
}
message ListProblemStdCheckersResponse {
    repeated ProblemFile data = 1;
}

message UpdateProblemCheckerRequest {
    int32 id = 1;
    int32 checker_id = 2;
}

message VerifyProblemRequest {
    int32 id = 1;
}

message GetProblemVerificationRequest {
    int32 id = 1;
}

message ProblemVerification {
    int32 id = 1;
    int32 problem_id = 2;
    int32 verification_status = 3;
    message VerificaitionInfo {
        string action = 1;
        string error_message = 2;
    }
    repeated VerificaitionInfo verificaiton_info = 4;
}
