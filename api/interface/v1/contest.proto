syntax = "proto3";

package jnoj.interface.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "api/interface/v1;v1";

service ContestService {
    // 比赛列表
    rpc ListContests (ListContestsRequest) returns (ListContestsResponse) {
        option (google.api.http) = {
            get: "/contests"
        };
    };
    // 比赛详情
    rpc GetContest (GetContestRequest) returns (Contest) {
        option (google.api.http) = {
            get: "/contests/{id}"
        };
    };
    // 获取比赛题目列表
    rpc ListContestProblems (ListContestProblemsRequest) returns (ListContestProblemsResponse) {
        option (google.api.http) = {
            get: "/contests/{id}/problems"
        };
    };
    // 获取比赛题目
    rpc GetContestProblem (GetContestProblemRequest) returns (ContestProblem) {
        option (google.api.http) = {
            get: "/contests/{id}/problems/{number}"
        };
    };
    // 获取比赛用户
    rpc ListContestUsers (ListContestUsersRequest) returns (ListContestUsersResponse) {
        option (google.api.http) = {
            get: "/contests/{id}/users"
        };
    }
}

message ListContestsRequest {
    string name = 1;
}
message ListContestsResponse {
    repeated Contest data = 1;
    int64 total = 2;
}

message GetContestRequest {
    int32 id = 1;
}

message Contest {
    int32 id = 1;
    string name = 2;
    google.protobuf.Timestamp start_time = 7;
    google.protobuf.Timestamp end_time = 8;
    google.protobuf.Timestamp frozen_time = 9;
    int32 type = 10;
    string intro = 11;
    int32 status = 12;
    int32 participant_count = 13;
    int32 user_id = 14;
}

message ListContestProblemsRequest {
    int32 id = 1;
}

message ListContestProblemsResponse {
    repeated Contest data = 1;
    int64 total = 2;
}

message GetContestProblemRequest{
    int32 id = 1;
    int32 number = 2;
}

message ContestProblem {
    int32 id = 1;
    int32 number = 2;
    int32 contest_id = 3;
    int32 problem_id = 4;
    int32 submit_count = 5;
    int32 accepted_count = 6;
}

message ContestUser {
    int32 id = 1;
    string nickname = 2;
    int32 user_id = 3;
}

message ListContestUsersRequest {
    int32 id = 1;
    int32 page = 2;
    int32 per_page = 3;
}

message ListContestUsersResponse {
    repeated ContestUser data = 1;
    int64 total = 2;
}