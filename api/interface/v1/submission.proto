syntax = "proto3";

package jnoj.interface.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "api/interface/v1;v1";

service SubmissionService {
    // 提交列表
    rpc ListSubmissions (ListSubmissionsRequest) returns (ListSubmissionsResponse) {
        option (google.api.http) = {
            get: "/submissions"
        };
    };
    // 提交详情
    rpc GetSubmission (GetSubmissionRequest) returns (Submission) {
        option (google.api.http) = {
            get: "/submissions/{id}"
        };
    };
    // 创建提交
    rpc CreateSubmission (CreateSubmissionRequest) returns (Submission) {
        option (google.api.http) = {
            post: "/submissions"
            body: "*"
        };
    };
    // 最后提交
    rpc GetLastSubmission (GetLastSubmissionRequest) returns (Submission) {
        option (google.api.http) = {
            get: "/last_submission"
        };
    };
}

// 提交
message Submission {
    int64 id = 1;
    // 题目ID
    int32 problem_id = 2;
    // 编程语言
    int32 language = 3;
    // 源码
    string source = 4;
    int64 memory = 5;
    int64 time = 6;
    int32 verdict = 7;
    int32 score = 8;
    int32 user_id = 9;
    string nickname = 10;
    SubmissionInfo info = 11;
    google.protobuf.Timestamp created_at = 12;
}

message ListSubmissionsRequest {
    optional int32 problem_id = 1;
    int32 entity_id = 2;
    int32 entity_type = 3;
    repeated int32 verdict = 4;
    int32 user_id = 5;
    int32 page = 6;
    int32 per_page = 7;
}

message ListSubmissionsResponse {
    repeated Submission data = 1;
    int64 total = 2;
}

message GetSubmissionRequest {
    int32 id = 1;
}

enum SubmissionEntityType {
    PROBLEMSET = 0;
    CONTEST = 1;
    PROBLEM_FILE = 2;
}

message CreateSubmissionRequest {
    int32 entity_id = 1;
    SubmissionEntityType entity_type = 2;
    // 编程语言
    int32 language = 3;
    // 源码
    string source = 4;
    int32 problem_number = 5;
}

message GetSubmissionInfoRequest {
    int32 id = 1;
}

message SubmissionInfo {
    string compile_msg = 1;
    float score = 2;
    int64 memory = 3;
    int64 time = 4;
    int32 total_test_count = 5;
    int32 accepted_test_count = 6;
    bool has_subtask = 7;
    repeated SubmissionSubtaskResult subtasks = 8;
    message SubmissionTest {
        int32 verdict = 1;
        string stdin = 2;
        string stdout = 3;
        string stderr = 4;
        string answer = 5;
        int64 time = 6;
        int64 memory = 7;
        int32 exit_code = 8;
        float score = 9;
        string checker_stdout = 10;
        int32 checker_exit_code = 11;
    }
    message SubmissionSubtaskResult {
        float score = 1;
        int64 time = 2;
        int64 memory = 3;
        int32 verdict = 4;
        repeated SubmissionTest tests = 5;
    }
}

message GetLastSubmissionRequest {
    int32 problem_id = 1;
    int32 entity_id = 2;
    int32 entity_type = 3;
    int32 user_id = 4;
}
